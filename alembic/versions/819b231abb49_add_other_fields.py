"""Add other fields

Revision ID: 819b231abb49
Revises: 9658dfac3d1e
Create Date: 2025-10-25 22:26:19.972686

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "819b231abb49"
down_revision: Union[str, Sequence[str], None] = "9658dfac3d1e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "vehicle",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("plate", sa.String(), nullable=False),
        sa.Column("model", sa.String(), nullable=True),
        sa.Column("year", sa.BigInteger(), nullable=True),
        sa.Column("color", sa.String(), nullable=True),
        sa.Column(
            "country",
            postgresql.ENUM("BR", name="country", create_type=False),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__vehicle")),
    )
    op.create_index(op.f("ix__vehicle_plate"), "vehicle", ["plate"], unique=True)
    op.create_table(
        "company",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("organization_id", sa.Uuid(), nullable=False),
        sa.Column("city_id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("register_code", sa.String(), nullable=False),
        sa.Column("address", sa.String(), nullable=False),
        sa.Column("postal_code", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("is_covered", sa.Boolean(), nullable=False),
        sa.Column("has_camera", sa.Boolean(), nullable=False),
        sa.Column("total_spots", sa.BigInteger(), nullable=False),
        sa.Column("has_charging_station", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["city_id"], ["city.id"], name=op.f("fk__company__city_id__city")
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organization.id"],
            name=op.f("fk__company__organization_id__organization"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__company")),
    )
    op.create_index(
        op.f("ix__company_register_code"), "company", ["register_code"], unique=True
    )
    op.create_table(
        "vehicle_owner",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("vehicle_id", sa.Uuid(), nullable=False),
        sa.Column("customer_id", sa.Uuid(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["customer_id"],
            ["customer.id"],
            name=op.f("fk__vehicle_owner__customer_id__customer"),
        ),
        sa.ForeignKeyConstraint(
            ["vehicle_id"],
            ["vehicle.id"],
            name=op.f("fk__vehicle_owner__vehicle_id__vehicle"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__vehicle_owner")),
    )
    op.create_table(
        "company_image",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("company_id", sa.Uuid(), nullable=False),
        sa.Column("image_url", sa.String(), nullable=False),
        sa.Column("is_primary", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["company.id"],
            name=op.f("fk__company_image__company_id__company"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__company_image")),
    )
    op.create_table(
        "parking_exception",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("company_id", sa.Uuid(), nullable=False),
        sa.Column("exception_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("start_hour", sa.BigInteger(), nullable=False),
        sa.Column("end_hour", sa.BigInteger(), nullable=False),
        sa.Column("price_cents", sa.BigInteger(), nullable=False),
        sa.Column("is_discount", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["company.id"],
            name=op.f("fk__parking_exception__company_id__company"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__parking_exception")),
    )
    op.create_table(
        "parking_price",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("company_id", sa.Uuid(), nullable=False),
        sa.Column("week_day", sa.BigInteger(), nullable=False),
        sa.Column("start_hour", sa.BigInteger(), nullable=False),
        sa.Column("end_hour", sa.BigInteger(), nullable=False),
        sa.Column("price_cents", sa.BigInteger(), nullable=False),
        sa.Column("is_discount", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["company.id"],
            name=op.f("fk__parking_price__company_id__company"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__parking_price")),
    )
    op.create_table(
        "vehicle_entrance",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("vehicle_id", sa.Uuid(), nullable=False),
        sa.Column("company_id", sa.Uuid(), nullable=False),
        sa.Column("entrance_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("ended_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("hourly_rate", sa.BigInteger(), nullable=True),
        sa.Column("total_price", sa.BigInteger(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["company.id"],
            name=op.f("fk__vehicle_entrance__company_id__company"),
        ),
        sa.ForeignKeyConstraint(
            ["vehicle_id"],
            ["vehicle.id"],
            name=op.f("fk__vehicle_entrance__vehicle_id__vehicle"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__vehicle_entrance")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("vehicle_entrance")
    op.drop_table("parking_price")
    op.drop_table("parking_exception")
    op.drop_table("company_image")
    op.drop_table("vehicle_owner")
    op.drop_index(op.f("ix__company_register_code"), table_name="company")
    op.drop_table("company")
    op.drop_index(op.f("ix__vehicle_plate"), table_name="vehicle")
    op.drop_table("vehicle")
    # ### end Alembic commands ###
